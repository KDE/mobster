#!/usr/bin/python

# look through remaster/daily-preinstalled for latest
# get date and build number
# copy to remaster/daily-preinstalled
# run system image
# link images

# Copyright Jonathan Riddell 2015
# May be copied under the GNU GPL v3 or later

import os
import subprocess
import json

workingDirectory = os.environ['HOME'] + "/kubuntu/"
debugging = True

def debug(message):
  if debugging:
    print "DEBUG " + message

# find the latest image and link it
dailyPreinstalled = os.listdir(workingDirectory + "remaster-proposed/daily-preinstalled/")
dailyPreinstalled.sort()
for build in reversed(dailyPreinstalled):
  if not build.startswith("201"):
    debug("skipping" + build)
    continue
  if os.path.exists(workingDirectory + "remaster-proposed/daily-preinstalled/" + build + "/vivid-preinstalled-touch-armhf.tar.gz"):
    os.chdir(workingDirectory + "remaster/daily-preinstalled/")
    os.symlink(workingDirectory + "remaster-proposed/daily-preinstalled/" + build, build)
    debug("added symlink to: " + build)
    break

# run import-images
os.chdir(workingDirectory + "system-image/")
subprocess.call(["./bin/import-images", "-vvvv"])

# it removes the links to the web index, add them back
os.chdir("www")
webFiles = ["15020612107_4561b13fff_k.jpg", "index.php", "plasma-mobile-logo.png"]
for linkFile in webFiles:
  os.symlink(workingDirectory + "mobster/"+linkFile, linkFile)

fp = open(workingDirectory + "system-image/www/neon-mobile/devel-proposed/hammerhead/index.json")
out = json.load(fp)
description = str(out["images"][0]["description"])
proposedDevelBuildVersion = description.split("version=")[1]

fp = open(workingDirectory + "system-image/www/neon-mobile/devel/hammerhead/index.json")
out = json.load(fp)
description = str(out["images"][0]["description"])
develBuildVersion = description.split("version=")[1]
