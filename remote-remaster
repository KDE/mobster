#!/bin/bash
#
# Remote (ARM server) remaster script to be run on the remote. This is
# essentially the remote harness.
#
# Copyright Harald Sitter 2015, may be copied under GNU GPL v2 or

set -ex

__dir__=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
CACHEDIR=$__dir__/cache
OUTDIR=$__dir__/output
EXTRACTDIR=$__dir__/ubuntu-touch-remaster/extract

[[ -d "$CACHEDIR" ]] || mkdir -p $CACHEDIR

rm -rf $OUTDIR
mkdir -p $OUTDIR

rm -rf $EXTRACTDIR
mkdir -p $EXTRACTDIR

echo "=== syncing reference image  `date`"
pushd $CACHEDIR
zsync http://cdimage.ubuntu.com/ubuntu-touch/vivid/daily-preinstalled/current/vivid-preinstalled-touch-armhf.tar.gz.zsync
img=$CACHEDIR/vivid-preinstalled-touch-armhf.tar.gz
popd

echo "=== extracting reference image  `date`"
tar -xpf $img -C $EXTRACTDIR

echo "=== uploading remaster script on arm server `date`"
#scp ../chroot-remaster ${SERVER}:ubuntu-touch-remaster/extract/
echo "=== setting up resolve.conf in chroot  `date`"
#ssh ${SERVER} cp /etc/resolv.conf ubuntu-touch-remaster/extract/etc/

echo "=== Binding /proc, /sys and /dev"
#ssh ${SERVER} mount --bind /dev  ubuntu-touch-remaster/extract/dev
#ssh ${SERVER} mount --bind /proc ubuntu-touch-remaster/extract/proc
#ssh ${SERVER} mount --bind /sys  ubuntu-touch-remaster/extract/sys

echo "=== running remaster script on arm server  `date`"
#ssh ${SERVER} chroot ubuntu-touch-remaster/extract /chroot-remaster

echo "=== Un-Binding /proc, /sys and /dev"
#ssh ${SERVER} umount ubuntu-touch-remaster/extract/sys
#ssh ${SERVER} umount ubuntu-touch-remaster/extract/dev
#ssh ${SERVER} umount ubuntu-touch-remaster/extract/proc

echo "=== making a new tar - this takes an age  `date`"
# gzip rsyncable as the gz is being extracted and meddled with as part of the
# image import, so the gzip we output here will not be the one used for
# devices anyway. might as well improve for transfer here. all things considered
tar -cp -C $EXTRACTDIR . | gzip --rsyncable -1 >$OUTDIR/vivid-preinstalled-touch-armhf.tar.gz
